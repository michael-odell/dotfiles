if [[ $# -gt 0 && $1 != "--force" ]] ; then
    echo "usage: plugins-update [--force]" >&2
    return 2
fi

mkdir -p ~/.zsh/plugins

local last_update_format="+%Y-%m-%d"

local p
for p in "${ZSH_PLUGINS[@]}" ; do
    local last_update_file=${HOME}/.zsh/plugins/${p}.last-update

    if ! plugin-is-cloned "$p" ; then
        (
            cd ~/.zsh/plugins
            git clone "${ZSH_PLUGIN_REPO[$p]}.git" "${ZSH_PLUGIN_DIR[$p]}"
            if [[ $? -eq 1 ]] ; then
                date "${last_update_format}" > "${last_update_file}"
                continue
            else
                echo "Failed to clone ${p}." >&2
            fi
        )
    fi

    # If there's no timestamp file, or if the timestamp has changed, or if --force is specified, do an
    # update
    if [[ ! -r "${last_update_file}" \
            || $(date "${last_update_format}") != "$(< "${last_update_file}")" \
            || ${1} == "--force" ]] ; then

        (
            echo "Updating plugin $p" >&2
            cd "${ZSH_PLUGIN_DIR[$p]}"
            if [[ -z "$(git status --porcelain --untracked-files=no)" ]] ; then
                git pull --quiet --prune
                if [[ $? -eq 0 ]] ; then
                    date "${last_update_format}" > "${last_update_file}"
                else
                    echo "Error pulling $p" >&2
                fi
            else
                echo "Skipping updates to $p because ${ZSH_PLUGIN_DIR[$p]} isn't clean." >&2
            fi
        )
    fi

done

# vim: set ft=zsh:
