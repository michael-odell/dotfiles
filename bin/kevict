#!/usr/bin/env python3

import argparse
import json
from sys import stderr

from kubernetes import client as kube
from kubernetes import config
from kubernetes.client.exceptions import ApiException


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        prog='evict',
        description='Evict the specified kubernetes pods, honoring local kubectl configuration.')

    parser.add_argument('--namespace', '-n', default="default")
    parser.add_argument('podname', nargs='+')

    parser.add_argument('--json', action=argparse.BooleanOptionalAction)

    args = parser.parse_args()

    config.load_config()

    for pod in args.podname:

        try:
            # Thanks to example: https://github.com/kubernetes-client/python/issues/689#issuecomment-485859439
            body = kube.V1Eviction(metadata=kube.V1ObjectMeta(name=pod, namespace=args.namespace))
            api_response = kube.CoreV1Api().create_namespaced_pod_eviction(
                name=pod,
                namespace=args.namespace,
                body=body)

        except ApiException as e:
            if(args.json):
                print(e.body)

            else:
                response = json.loads(e.body)
                message = response["message"]
                print(f"Eviction of {pod} failed: {message}", file=stderr)

